#######################################
###       Logging Configuration     ###
#######################################
expt:
  project_name:                 "searl"
  session_name:                 "neuroevolution"
  experiment_name:              "default_searl_td3"


#######################################
###      NEVO Configuration         ###
#######################################
nevo:
  population_size:              2 #10
  tournament_size:              1 #3
  selection:                    True
  mutation:                     True
  training:                     True
  elitism:                      True
  min_train_time:               200
  worker:                       5
  reuse_batch:                  1
  ind_memory:                   False
  init_random_macro:            False
  init_random_micro:            False
  cell_pop_size:                20


mutation:
  no_mutation:                  0.2
  parameters:                   0.2
  architecture:                 0.2
  activation:                   0.2
  rl_hyperparam:                0.2
  rl_hp_selection:              ['lr_actor','lr_critic'] # 'train_frames_fraction','batch_size',,'td3_policy_noise','td3_update_freq', 'optimizer']
  # new_layer_prob:               0.2
  mutation_sd:                  0.1


train:
  replay_memory_size:           1000000
  num_frames:                   2000000
  td3_double_q:                 True
  evo_warm_up:                  1
  min_train_steps:              250


rl:
  train_frames_fraction:        0.5 # 5000 train_iternations
  gamma:                        0.99
  tau:                          0.005
  batch_size:                   100
  lr_actor:                     0.001
  lr_critic:                    0.001
  clip_grad_norm:               100
  td3_policy_noise:             0.2     # False or TD3 default: 0.2
  td3_noise_clip:               0.5     # default 0.5
  td3_update_freq:              2       # 1 or TD3 default: 2
  optimizer:                    "adam" ##  ["adam", "adamax", "rmsprop", "sdg"]
  start_timesteps:              1


seed:
  replay_memory:                123
  evaluation:                   123
  mutation:                     123
  training:                     123
  torch:                        123
  numpy:                        123


#######################################
###    Environment Configuration    ###
#######################################
env:
  name:                        'MountainCarContinuous-v0' #'Walker2d-v2' #'Walker2d-v2' #'HalfCheetah-v2' # HalfCheetah-v2'


eval:
  eval_episodes:                1
  min_eval_steps:               250
  exploration_noise:            0.1     # Default 0.1
  test_episodes:                10
  test_seed:                    123


#######################################
###  Actor Starting Configuration   ###
#######################################
actor:
  hidden_size:             [128]
  activation:              'relu' #'relu' , 'sigmoid' 'softplus',
  output_activation:       'tanh'
  layer_norm:              True
  output_vanish:           False

#######################################
###  Critic Starting Configuration  ###
#######################################
critic:
  hidden_size:             [128]
  activation:              'relu' #'relu' , 'sigmoid' 'softplus',
  output_activation:       'linear'
  layer_norm:              True
  output_vanish:           True

#######################################
###  Cell Starting Configuration  ###
#######################################
cell:
  hidden_size:             [128]
  activation:              'relu'
  output_activation:       'linear'
  layer_norm:              True
  output_vanish:           False
  #boolean maintain original population after mutations
  keep_original_population: False

  #method to insert cells into population
  #epsilon greedy (either random or mean fitness
  insertion_method:
  epsilon:                .8
  #boolean keep population below this size
  population_limit:
  #if population limit,
  #remove cells over this maximum
  population_max:
  #removes all unreferenced cells
  #selection methods for cells
  #OPTIONS: 'least_fit', 'tournament', 'reverse tournament', 'random'
  select_method:
  #out of all the cells that are removed,
  #what percent will be inferior, and what percent will be inactive
  #percentage of inactive cells to remove
  percent_inactive:
  #percentage of inferior cells to remove
  percent_inferior:
  #remove_inactive:
  #keep unused cells
  #keep_unused:
  #remove cells with poor fitness
  #remove_inferior: